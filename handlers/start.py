from aiogram import types, Router, F
from aiogram.filters import Command
from keyboards.button import main_keyboard, buy_subscription_keyboard, buy_carts
from config import db
from datetime import datetime, timedelta

router = Router()


@router.message(Command("start"))
async def start_command(message: types.Message):
    user_id = str(message.from_user.id)
    user_id_from_db = db.fetchone("SELECT user_id FROM users WHERE user_id=?", (user_id,))
    if user_id_from_db is not None and str(user_id_from_db[0]) == user_id:
        markup = main_keyboard()
        await message.answer("üëãüèª –ë–æ—Ç —É–º–µ–µ—Ç <b>–∞–Ω–æ–Ω–∏–º–Ω–æ</b> —Å–º–æ—Ç—Ä–µ—Ç—å –ª—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º –∏ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ.\n"
                             "\n"
                             "üëÄ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ <b>–í–ö, –ò–Ω—Å—Ç—É, –Æ—Ç—É–±</b> –∏–ª–∏ <b>TikTok</b>. "
                             "–í—Å—ë —á—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç –º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å "
                             "–≤ /faq (–Ω–∞–∂–º–∏)\n"
                             "\n"
                             "ü§î –õ—É—á—à–∏–π –±–æ—Ç –ø–æ —Ü–µ–Ω–µ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É, –∫–æ–ª-–≤—É —Ñ—É–Ω–∫—Ü–∏–π –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã.",
                             reply_markup=markup, parse_mode='html')
    else:
        now = datetime.now()
        one_day = timedelta(days=1)
        new_date = now + one_day
        db.query(
            "INSERT INTO users (user_id, user_name, type_subscripion, start_subscription, end_subscription, sum_buy) "
            "VALUES (?, ?, ?, ?, ?, ?)", (int(message.from_user.id), str(message.from_user.username),
                                          'trial', now, new_date, 0))
        markup = main_keyboard()
        await message.answer("üëãüèª –ë–æ—Ç —É–º–µ–µ—Ç <b>–∞–Ω–æ–Ω–∏–º–Ω–æ</b> —Å–º–æ—Ç—Ä–µ—Ç—å –ª—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º –∏ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ.\n"
                             "\n"
                             "üëÄ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ <b>–í–ö, –ò–Ω—Å—Ç—É, –Æ—Ç—É–±</b> –∏–ª–∏ <b>TikTok</b>. "
                             "–í—Å—ë —á—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç –º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å "
                             "–≤ /faq (–Ω–∞–∂–º–∏)\n"
                             "\n"
                             "ü§î –õ—É—á—à–∏–π –±–æ—Ç –ø–æ —Ü–µ–Ω–µ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É, –∫–æ–ª-–≤—É —Ñ—É–Ω–∫—Ü–∏–π –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã.",
                             reply_markup=markup, parse_mode='html')


@router.callback_query(F.data == 'back_buy')
@router.callback_query(F.data == 'buy_subscription')
async def buy(call: types.CallbackQuery):
    user_id = int(call.from_user.id)
    buy_sum = db.fetchone("SELECT sum_buy FROM users WHERE user_id=?", (user_id,))
    subscribe_date = db.fetchone("SELECT end_subscription FROM users WHERE user_id=?",
                                 (user_id,))
    subscribe = db.fetchone("SELECT type_subscripion FROM users WHERE user_id=?", (user_id,))
    markup = buy_subscription_keyboard()
    if subscribe[0] == 'trial':
        date_object = datetime.strptime(subscribe_date[0], '%Y-%m-%d %H:%M:%S.%f')

        hours_minutes = date_object.strftime('%H:%M')
        await call.message.edit_text(f"<b>–£—Å–ª–æ–≤–∏—è —Å–∫–∏–¥–æ–∫</b> üíØ\n"
                                     f"‚Äî –ü–æ–∫—É–ø–æ–∫ –æ—Ç 2500 —Ä—É–±: 15%\n"
                                     f"‚Äî –ü–æ–∫—É–ø–æ–∫ –æ—Ç 1200 —Ä—É–±: 8%\n"
                                     f"‚Äî –ü–æ–∫—É–ø–æ–∫ –æ—Ç 500 —Ä—É–±: 5%\n"
                                     f"‚Äî –î–ª—è –ø–µ—Ä–≤–æ–π –ø–æ–∫—É–ø–∫–∏: 10%\n"
                                     f"–ë–æ–ª—å—à–µ –ø–æ–∫—É–ø–æ–∫ –≤ –±–æ—Ç–µ ‚Äî –≤—ã—à–µ —Å–∫–∏–¥–∫–∞.\n"
                                     f"\n"
                                     f"üè∑ –í–∞—à–∞ —Å–∫–∏–¥–∫–∞: 10%\n"
                                     f"üí≥ –°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫: {buy_sum[0]} —Ä—É–±.\n"
                                     f"üîë –ü–æ–¥–ø–∏—Å–∫–∞: –ó–∞–∫–æ–Ω—á–∏—Ç—Å—è –∑–∞–≤—Ç—Ä–∞ –≤ <b>{hours_minutes}</b> (–ú–°–ö)\n"
                                     f"\n"
                                     f"‚Äî –ü–æ–∫—É–ø–∞—è –ø–æ–¥–ø–∏—Å–∫—É –ù–ê–í–°–ï–ì–î–ê —É –≤–∞—Å —Å–Ω–∏–º–∞—é—Ç—Å—è –≤—Å–µ –ª–∏–º–∏—Ç—ã.\n"
                                     f"‚Äî –ß–µ–º –¥–æ–ª—å—à–µ –ø–æ–¥–ø–∏—Å–∫–∞, —Ç–µ–º –≤—ã–≥–æ–¥–Ω–µ–µ.", reply_markup=markup, parse_mode="html")
    else:
        await call.message.edit_text(f"<b>–£—Å–ª–æ–≤–∏—è —Å–∫–∏–¥–æ–∫</b> üíØ\n"
                                     f"‚Äî –ü–æ–∫—É–ø–æ–∫ –æ—Ç 2500 —Ä—É–±: 15%\n"
                                     f"‚Äî –ü–æ–∫—É–ø–æ–∫ –æ—Ç 1200 —Ä—É–±: 8%\n"
                                     f"‚Äî –ü–æ–∫—É–ø–æ–∫ –æ—Ç 500 —Ä—É–±: 5%\n"
                                     f"‚Äî –î–ª—è –ø–µ—Ä–≤–æ–π –ø–æ–∫—É–ø–∫–∏: 10%\n"
                                     f"–ë–æ–ª—å—à–µ –ø–æ–∫—É–ø–æ–∫ –≤ –±–æ—Ç–µ ‚Äî –≤—ã—à–µ —Å–∫–∏–¥–∫–∞.\n"
                                     f"\n"
                                     f"üè∑ –í–∞—à–∞ —Å–∫–∏–¥–∫–∞: 10%\n"
                                     f"üí≥ –°—É–º–º–∞ –ø–æ–∫—É–ø–æ–∫: {buy_sum[0]} —Ä—É–±.\n"
                                     f"üîë –ü–æ–¥–ø–∏—Å–∫–∞: –ó–∞–∫–æ–Ω—á–∏—Ç—Å—è {subscribe_date} (–ú–°–ö)\n"
                                     f"\n"
                                     f"‚Äî –ü–æ–∫—É–ø–∞—è –ø–æ–¥–ø–∏—Å–∫—É –ù–ê–í–°–ï–ì–î–ê —É –≤–∞—Å —Å–Ω–∏–º–∞—é—Ç—Å—è –≤—Å–µ –ª–∏–º–∏—Ç—ã.\n"
                                     f"‚Äî –ß–µ–º –¥–æ–ª—å—à–µ –ø–æ–¥–ø–∏—Å–∫–∞, —Ç–µ–º –≤—ã–≥–æ–¥–Ω–µ–µ.", reply_markup=markup, parse_mode="html")


@router.callback_query(F.data == '7_day')
@router.callback_query(F.data == '1_month')
@router.callback_query(F.data == '3_month')
@router.callback_query(F.data == '6_month')
@router.callback_query(F.data == '1_year')
@router.callback_query(F.data == 'forever')
async def seven_days(call: types.CallbackQuery):
    markup = buy_carts()
    await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –≤–∞—Å —Å–ø–æ—Å–æ–± –æ–ø–ª–∞—Ç—ã.\n"
                                 "\n"
                                 "üí≥ –ë–∞–Ω–∫. –∫–∞—Ä—Ç–∞ ‚Äî —ç—Ç–æ —Å–µ—Ä–≤–∏—Å Robo–ö–∞—Å—Å–∞.\n"
                                 "‚Äî –ú–µ—Ç–æ–¥—ã –æ–ø–ª–∞—Ç—ã: –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞, –ÆMoney, SberPay, MirPay.", reply_markup=markup)


@router.callback_query(F.data == 'back_menu')
async def back_menu(call: types.CallbackQuery):
    markup = main_keyboard()
    await call.message.edit_text("üëãüèª –ë–æ—Ç —É–º–µ–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω–æ —Å–º–æ—Ç—Ä–µ—Ç—å –ª—é–±–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –≤ –ò–Ω—Å—Ç–∞–≥—Ä–∞–º –∏ –í–∫–æ–Ω—Ç–∞–∫—Ç–µ.\n"
                                 "\n"
                                 "üëÄ –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å —Å—Å—ã–ª–∫—É –Ω–∞ –í–ö, –ò–Ω—Å—Ç—É, –Æ—Ç—É–± –∏–ª–∏ TikTok. –í—Å—ë —á—Ç–æ —É–º–µ–µ—Ç –±–æ—Ç –º–æ–∂–Ω–æ "
                                 "–ø—Ä–æ—á–∏—Ç–∞—Ç—å "
                                 "–≤ /faq (–Ω–∞–∂–º–∏)\n"
                                 "\n"
                                 "ü§î –õ—É—á—à–∏–π –±–æ—Ç –ø–æ —Ü–µ–Ω–µ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É, –∫–æ–ª-–≤—É —Ñ—É–Ω–∫—Ü–∏–π –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏ —Ä–∞–±–æ—Ç—ã.",
                                 reply_markup=markup)
