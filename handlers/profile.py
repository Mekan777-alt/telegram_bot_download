from aiogram import types, Router, F
from keyboards.button import *
from config import db, bot
from datetime import datetime
from month.month import month
from aiogram.utils.markdown import hlink


router = Router()


@router.callback_query(F.data == 'back_profile')
@router.callback_query(F.data == 'profile')
async def profile(call: types.CallbackQuery):
    month_user_check = db.fetchone("SELECT registration FROM users WHERE user_id=?", (int(call.from_user.id),))
    date_object = datetime.strptime(month_user_check[0], '%Y-%m-%d %H:%M:%S.%f')
    month_check = str(date_object.date())[5:7]
    data_check = str(date_object.date())[8:10]
    time_check = str(date_object)[11:16]
    subscribe = db.fetchone("SELECT type_subscripion FROM users WHERE user_id=?", (int(call.from_user.id),))
    subscribe_date = db.fetchone("SELECT end_subscription FROM users WHERE user_id=?",
                                 (call.from_user.id,))
    check_subscr = datetime.strptime(subscribe_date[0], '%Y-%m-%d %H:%M:%S.%f')
    hours_minutes = check_subscr.strftime('%H:%M')
    date = check_subscr.strftime('%Y-%m-%d')
    if month_check in month:
        if subscribe[0] == 'trial':
            await call.message.edit_text(f"‚òÄÔ∏è –í –±–æ—Ç–µ —Å <b>{data_check}</b> {month[month_check]} <b>{time_check}</b>\n"
                                         f"\n"
                                         f"üîë <b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–æ—Ç–∞</b>\n"
                                         f"‚Äî –ü–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –∑–∞–≤—Ç—Ä–∞ –≤ <b>{hours_minutes}</b> –ú–°–ö\n"
                                         f"\n"
                                         f"–í –ø—Ä–æ—Ñ–∏–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö, —Å–≤–æ–∏ —Ç–æ–∫–µ–Ω—ã VK –∏ –ø–æ–ª—É—á–∏—Ç—å "
                                         f"–±–æ–Ω—É—Å—ã –∑–∞ –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞.", reply_markup=profile_button(),
                                         parse_mode="html")
        else:
            await call.message.edit_text(f"‚òÄÔ∏è –í –±–æ—Ç–µ —Å <b>{data_check}</b> {month[month_check]} <b>{time_check}</b>\n"
                                         f"\n"
                                         f"üîë <b>–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –±–æ—Ç–∞</b>\n"
                                         f"‚Äî –ü–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è {date} <b>{hours_minutes}</b> –ú–°–ö\n"
                                         f"\n"
                                         f"–í –ø—Ä–æ—Ñ–∏–ª–µ –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö, —Å–≤–æ–∏ —Ç–æ–∫–µ–Ω—ã VK –∏ –ø–æ–ª—É—á–∏—Ç—å "
                                         f"–±–æ–Ω—É—Å—ã –∑–∞ –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞.", reply_markup=profile_button(),
                                         parse_mode="html")


@router.callback_query(F.data == 'referal')
async def referal_programm(call: types.CallbackQuery):
    bot_info = await bot.get_me()
    bot_username = bot_info.username
    link = hlink("–ù–ê–ñ–ú–ò –°–Æ–î–ê", f'https://t.me/{bot_username}?start={call.from_user.id}')
    await call.message.edit_text(f"üöÄ <b>–ü—Ä–∏–≥–ª–∞—Å–∏—Ç–µ–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞</b>\n"
                                 f"‚Äî –°—Å—ã–ª–∫–∞: {link}\n"
                                 f"‚Äî –ü–µ—Ä–µ—à–ª–æ –ø–æ —Å—Å—ã–ª–∫–µ 0 —á–µ–ª.\n"
                                 f"\n"
                                 f"üë• <b>–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–µ—Ä–µ—à–µ–¥—à–∏–µ</b>\n"
                                 f"‚Äî –í—ã –µ—â—ë –Ω–∏–∫–æ–≥–æ –Ω–µ –ø—Ä–∏–≥–ª–∞—à–∞–ª–∏.\n"
                                 f"\n"
                                 f"<b>–ï—Å–ª–∏ –ø—Ä–∏–≤–µ–ª–∏ –¥—Ä—É–≥–∞ ‚Üì</b>\n"
                                 f"‚Äî –ü–æ–ª—É—á–∞–µ—Ç–µ +10 –ø–æ–∏—Å–∫–æ–≤.\n"
                                 f"‚Äî –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—è—Ç–æ–≥–æ +25 –ø–æ–∏—Å–∫–æ–≤.\n"
                                 f"\n"
                                 f"<b>–î—Ä—É–≥ —Å–¥–µ–ª–∞–ª –ø–æ–∫—É–ø–∫—É ‚Üì</b>\n"
                                 f"‚Äî –ü–æ–ª—É—á–∞–µ—Ç–µ 1/3 –¥–Ω–µ–π –æ—Ç –∫–∞–∂–¥–æ–π –ø–æ–∫—É–ø–∫–∏.\n"
                                 f"‚Äî –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –Ω–∞–≤—Å–µ–≥–¥–∞, —Ç–æ 180 –¥–Ω–µ–π.", reply_markup=referal_keyboard(),
                                 parse_mode='html')

